


import pandas as pd
import numpy as np
from sklearn.datasets import load_iris, fetch_california_housing

housing = fetch_california_housing()

df = pd.DataFrame(housing.data, columns=housing.feature_names)

print(df.columns)
"""
Index(['MedInc', 'HouseAge', 'AveRooms', 'AveBedrms', 'Population', 'AveOccup',
       'Latitude', 'Longitude'],
      dtype='object')
"""

print(df.groupby(["HouseAge"]).mean().head(5))
"""
            MedInc  AveRooms  AveBedrms  ...  AveOccup   Latitude   Longitude
HouseAge                                 ...                                 
1.0       4.003400  9.088091   1.552106  ...  3.244088  36.205000 -119.457500
2.0       5.167766  7.649087   1.273514  ...  2.747802  35.494483 -119.121379
3.0       5.460258  6.851805   1.192486  ...  2.734708  35.284516 -118.936452
4.0       5.180673  6.112610   1.116190  ...  2.786138  34.966963 -118.814293
5.0       4.697636  5.963211   1.128014  ...  3.279108  35.234262 -118.918033
"""







df["rank"] =  df.groupby("HouseAge").cumcount() + 1

df = df.sort_values(by = ["HouseAge","rank"])

print(df.head(20))
"""
        MedInc  HouseAge   AveRooms  ...  Latitude  Longitude  rank
3130    4.8750       1.0   5.533333  ...     35.08    -117.95     1
12286   1.6250       1.0   3.000000  ...     33.86    -116.95     2
18972   5.2636       1.0   7.694030  ...     38.23    -122.00     3
19536   4.2500       1.0  20.125000  ...     37.65    -120.93     4
59      2.5625       2.0   2.771930  ...     37.82    -122.29     1
854     2.8750       2.0   5.624161  ...     37.59    -122.01     2
1565    3.1591       2.0   4.632653  ...     37.78    -121.93     3
1566   15.0001       2.0  22.222222  ...     37.74    -121.96     4
1648    2.9591       2.0   4.482808  ...     37.99    -121.96     5
2206    4.2132       2.0   6.200306  ...     36.83    -119.88     6
2339    4.5577       2.0   7.540936  ...     36.82    -119.67     7
2774    5.3374       2.0   6.000000  ...     33.26    -115.80     8
3140    5.0553       2.0   6.221893  ...     34.87    -118.19     9
9109    6.4865       2.0   8.052670  ...     34.60    -118.16    10
9132    4.0710       2.0   6.281395  ...     34.55    -118.01    11
9168    1.9667       2.0   5.715976  ...     34.42    -118.56    12
9187    6.6916       2.0   9.769984  ...     34.38    -118.61    13
9378    6.6410       2.0   5.483051  ...     37.91    -122.51    14
10336   7.1193       2.0   9.093750  ...     33.81    -117.76    15
10376  10.1531       2.0   9.906329  ...     33.64    -117.62    16

[20 rows x 9 columns]
"""







df = df.reset_index(drop=True)  # drop=True prevents adding the old index as a column

df['Row_Number'] = df.index + 1

print(df.head(10))
"""
    MedInc  HouseAge   AveRooms  ...  Longitude  rank  Row_Number
0   4.8750       1.0   5.533333  ...    -117.95     1           1
1   1.6250       1.0   3.000000  ...    -116.95     2           2
2   5.2636       1.0   7.694030  ...    -122.00     3           3
3   4.2500       1.0  20.125000  ...    -120.93     4           4
4   2.5625       2.0   2.771930  ...    -122.29     1           5
5   2.8750       2.0   5.624161  ...    -122.01     2           6
6   3.1591       2.0   4.632653  ...    -121.93     3           7
7  15.0001       2.0  22.222222  ...    -121.96     4           8
8   2.9591       2.0   4.482808  ...    -121.96     5           9
9   4.2132       2.0   6.200306  ...    -119.88     6          10
"""





print(df.groupby("HouseAge").sum("AveRooms").head(5))
"""
             MedInc     AveRooms   AveBedrms  ...  Longitude   rank  Row_Number
HouseAge                                      ...                              
1.0         16.0136    36.352363    6.208422  ...    -477.83     10          10
2.0        299.7304   443.647060   73.863799  ...   -6909.04   1711        1943
3.0        338.5360   424.811934   73.934135  ...   -7374.06   1953        5797
4.0        989.5086  1167.508603  213.192367  ...  -22693.53  18336       42020
5.0       1146.2232  1455.023412  275.235401  ...  -29016.00  29890      106750
"""









print(df.groupby("HouseAge").transform("mean").head(5))
"""
     MedInc  AveRooms  AveBedrms  ...   Longitude  rank  Row_Number
0  4.003400  9.088091   1.552106  ... -119.457500   2.5         2.5
1  4.003400  9.088091   1.552106  ... -119.457500   2.5         2.5
2  4.003400  9.088091   1.552106  ... -119.457500   2.5         2.5
3  4.003400  9.088091   1.552106  ... -119.457500   2.5         2.5
4  5.167766  7.649087   1.273514  ... -119.121379  29.5        33.5

[5 rows x 9 columns]
"""








df["mean_house_rooms_with_age"] = df.groupby("HouseAge")["AveBedrms"].transform("mean")

print(df.head(10))
"""
    MedInc  HouseAge   AveRooms  ...  rank  Row_Number  mean_house_rooms_with_age
0   4.8750       1.0   5.533333  ...     1           1                   1.552106
1   1.6250       1.0   3.000000  ...     2           2                   1.552106
2   5.2636       1.0   7.694030  ...     3           3                   1.552106
3   4.2500       1.0  20.125000  ...     4           4                   1.552106
4   2.5625       2.0   2.771930  ...     1           5                   1.273514
5   2.8750       2.0   5.624161  ...     2           6                   1.273514
6   3.1591       2.0   4.632653  ...     3           7                   1.273514
7  15.0001       2.0  22.222222  ...     4           8                   1.273514
8   2.9591       2.0   4.482808  ...     5           9                   1.273514
9   4.2132       2.0   6.200306  ...     6          10                   1.273514
"""





df.drop(columns = {"rank"},inplace= True)
















